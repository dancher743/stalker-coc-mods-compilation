--------------------------------------------------
--** Скрипт подработки ГГ проводником.
--** Автор - SadBlackFox
--------------------------------------------------
local stdzarplata = 1000
local guid = {}
local curr_guid = {}
debug = false

local beep_1 = sound_object([[device\pda\pda_beep_1]])
local beep_2 = sound_object([[device\pda\pda_beep_2]])

function load_state()
	guid = jg_utils.l_v("guid", {})
	curr_guid = jg_utils.l_v("curr_guid", {})
	local newgame = jg_utils.l_v("newgame")	-- хз как ещё сделать срабатывание при НИ
	if not newgame then 
		jg_utils.s_v("newgame", 'Каллбек сработал')
		jg_timers.g_start_timer('guid_msg',0,0,15,'jg_guider','prepare_follower')
	end
end 
function save_state()
	jg_utils.s_v("guid", guid)
	jg_utils.s_v("curr_guid", curr_guid)
end
function squad_on_npc_death(squad,se_npc)
	if ((squad.id == curr_guid['squad_id']) and (squad:npc_count() == 0)) then
		if db.actor:has_info('guider_start') then
			news_manager.send_tip(db.actor, game.translate_string("ui_st_jg_squad_killed"), nil, nil, 5000)
			xr_statistic.inc_actor_reputation(-1000)
		end
		clear()
	end
end
function on_game_start()
	RegisterScriptCallback("load_state",load_state)
	RegisterScriptCallback("save_state",save_state)
	RegisterScriptCallback("squad_on_npc_death",squad_on_npc_death)
end

function clear()
	db.actor:disable_info_portion('guider_start')
	local spot_id = curr_guid.spot_id
	if (spot_id) then
		-- level.map_remove_object_spot(curr_guid.squad_id, 'storyline_task_location')
		local se_obj = alife_object(spot_id)
		if (se_obj) then
			level.map_remove_object_spot(se_obj.id, "crlc_guide")
			get_alife():release(se_obj)
		end
	end
	curr_guid = {}
	jg_utils.d_v("curr_guid")
	jg_hud_timer.try_stop()
	jg_timers.stop_g_timer('guid_fail')
	jg_timers.g_start_timer('guid_msg',1,math.random(11,23),59,'jg_guider','prepare_follower')
end 

local function clear_guid()
	local spot_id = guid.spot_id
	if (spot_id) then
		local spot_icon = "ui_pda2_need_guider_location_level_map"
		if (level.map_has_object_spot(spot_id,spot_icon) == 1) then
			level.map_remove_object_spot(spot_id,spot_icon)
		end
	end
	guid = {}
	jg_utils.d_v("guid")
end 

function ins_mass_onl()
	if has_guiding_started() then return nil end
	local mass_onl = {}
	for k, id in pairs(db.OnlineStalkers) do
		local npc = level.object_by_id(id)
		if npc and jg_utils.is_not_quest_npc(get_alife():object(id)) and not (id == get_comm_id(curr_guid['squad_id'])) and dialogs_axr_companion.is_not_actor_companion(db.actor, npc) and jg_utils.is_not_enemy(db.actor, npc) and dialogs_axr_companion.is_not_hostage_task_giver(db.actor, npc) and xr_conditions.is_squad_commander(db.actor, npc) and not axr_companions.is_companion(npc) then
			mass_onl[#mass_onl + 1] = npc
		end
	end
	return (#mass_onl ~= 0) and mass_onl[math.random(#mass_onl)] or nil
end

--[[
	Функция поиска НПС, которому нужен проводник. 
	Если такой НПС находится, то отправляется сообщение в сеть.
	Вызывается таймерами
]]
function prepare_follower()
	clear_guid()
	local npc = ins_mass_onl()
	if npc == nil then
		if debug == true then printf('! Некого провожать | npc==nil') end
		jg_timers.g_start_timer('guid_msg',0,0,15,'jg_guider','prepare_follower')
		return
	end
	local level_name, size = jg_gps.go_poisk()
	if level_name == nil or size == nil then return jg_timers.g_start_timer('guid_msg',0,0,15,'jg_guider','prepare_follower') end
	local points = dynamic_news_helper.all_points[level_name]
	local rnd = math.random(#points)
	local pos = points[rnd]
	if pos == nil then 
		--[[Не для всех уровней есть такие подлокации. Поэтому ищем заново]]
		jg_timers.g_start_timer('guid_msg',0,0,5,'jg_guider','prepare_follower')
		return
	end
	guid.pos			= pos
	guid.target_level	= level_name
	guid.description	= strformat("%s %s", game.translate_string("st_dyn_news_"..level_name) or STR_EMPTY, game.translate_string("st_dyn_"..level_name.."_blizko_"..rnd))
	guid.squad_id		= get_object_squad(npc).id
	guid.size			= size
	guid.timer			= 2*(size + math.random(0, size))
	guid.zarplata		= utils.round_to_1000(2*(math.ceil(size * math.random(stdzarplata * 0.5, stdzarplata * 1.5))))
	guid.neustoika		= utils.round_to_1000(guid.zarplata * math.random(25,75)/100)
	guid.nadbavka_cf	= 0.2
	guid.bonus_time_cf	= 0.2
	
	if (axr_main_options.get_check_option("show_guide_job_on_map")) then
		local spot_id = guid.squad_id
		local spot_icon = "ui_pda2_need_guider_location_level_map"
		local spot_descr = strformat(strtransl("st_ui_pda_need_guider_spot_descr"), npc:character_name())
		level.map_add_object_spot_ser(spot_id, spot_icon, spot_descr)
		guid.spot_id = spot_id
	end
	
	local news_text = string.format(game.translate_string('st_jg_14'), game.translate_string(level_name), dynamic_news_helper.GetPointDescription(npc))
	send_tip(npc, news_text, beep_1)
	
	-- Запускаем таймер следующего вызова этой функции
	jg_timers.g_start_timer('guid_msg',0,math.random(11,23),59,'jg_guider','prepare_follower')
end

function activate()
	curr_guid = jg_utils.copy_tbl(guid)
	clear_guid()
	
	-- Старт таймера фэйла
	jg_timers.g_start_timer('guid_fail',0,curr_guid['timer'],0,'jg_guider','fail_time')
	jg_timers.stop_g_timer('guid_msg')
	
	jg_hud_timer.try_start()
	
	if (axr_main_options.get_check_option("show_guide_job_on_map")) then
		local pos = vector():set(curr_guid.pos[1], curr_guid.pos[2], curr_guid.pos[3])
		local lvid = level.vertex_id(pos)
		local gvid = utils.get_nearest_game_vertex(pos, curr_guid.target_level)
		local se_obj = get_alife():create("guide_spot_object",pos,lvid,gvid)
		
		local spot_id = se_obj.id
		local npc = level.object_by_id(get_comm_id(curr_guid.squad_id))
		local spot_descr = strformat(strtransl("st_ui_pda_guider_target_spot_descr"),npc:character_name(),curr_guid.description)
		level.map_add_object_spot_ser(spot_id, "crlc_guide", spot_descr)
		-- level.map_add_object_spot_ser(guid.squad_id, 'storyline_task_location', 'Сталкеру необходимо попасть '..description)
		
		curr_guid.spot_id = spot_id
	else
		curr_guid.spot_id = nil
	end
end

function complete(actor,npc)
	local zarplata = curr_guid['zarplata']
	dialogs.relocate_money(actor,zarplata,"in")
	
	local nadbavka_cf = curr_guid.nadbavka_cf
	if (has_time_bonus() and nadbavka_cf) then
		dialogs.relocate_money(actor,zarplata * nadbavka_cf,"in")
	end
	
	xr_statistic.inc_actor_reputation(100)
	dialogs_axr_companion.remove_companions_from_squad(actor,npc)
	clear()
end

function fail_time()
	local npc = level.object_by_id(get_comm_id(curr_guid['squad_id']))
	if npc then
		local news_text = string.format(game.translate_string('st_jg_15'), curr_guid['neustoika'])
		send_tip(npc, news_text, beep_2)
	end
	fail()
end

function fail()
--[[	На данный момент нет условий, при котором напарник был бы в оффлайне(они принудительно всегда в онлайне),
		поэтому использование переключателя нецелесообразно
	local func = function()
					local squad = get_alife():object(curr_guid['squad_id'])
					local commander_id = squad:commander_id()
					local npc = level.object_by_id(commander_id)
					news_manager.send_tip(db.actor, "Мы опоздали! Мы же договаривались!! Плати неустойку в "..curr_guid['neustoika']..' рублей.'..'. '..(npc:character_name() or ''))
					if db.actor:money() >= curr_guid['neustoika'] then 
						dialogs.relocate_money(db.actor,curr_guid['neustoika'],"out")
					else
						dialogs.relocate_money(db.actor,db.actor:money(),"out")
					end
					clear()
				end
	local squad = get_alife():object(curr_guid['squad_id'])
	jg_utils.squad_switcher(squad,func) -- выкидыш при помощи переключателя
]]
	local m = db.actor:money()
	if (m >= curr_guid['neustoika']) then 
		jg_utils.change_money(curr_guid['neustoika'], "out")
	else
		jg_utils.change_money(m, "out")
	end
	xr_statistic.inc_actor_reputation(-500)
	local snpc = get_alife():object(get_comm_id(curr_guid['squad_id']))
	alun_utils.execute_script_on_squad(snpc,axr_companions.remove_from_actor_squad)
	clear()
end

function get_comm_id(squad_id)
	if squad_id == nil then return end
	local squad = get_alife():object(squad_id)
	return squad and squad:commander_id()
end

--///////////////////////////////// Диалоговые функции

function is_guider_companion(actor, npc)
	local npc = dialogs.who_is_npc(actor,npc)
	return get_object_squad(npc).id == curr_guid['squad_id']
end

function is_not_guider_companion(actor, npc)
	local npc = dialogs.who_is_npc(actor,npc)
	return not (get_object_squad(npc).id == curr_guid['squad_id'])
end

function prec_1(actor, npc)
	local npc = dialogs.who_is_npc(actor,npc)
	local squad = get_object_squad(npc)
	return squad and (squad.id == guid['squad_id'] or squad.id == curr_guid['squad_id'])
end

function prec_2()
	if db.actor:money() >= guid['neustoika'] then return true end
end

function prec_3()
	if db.actor:money() < guid['neustoika'] then return true end
end

function prec_4(actor, npc)
	local npc = dialogs.who_is_npc(actor,npc)
	local squad = get_object_squad(npc)
	if squad and (squad.id == curr_guid['squad_id']) then return true end
end

function prec_5(actor, npc)
	local npc = dialogs.who_is_npc(actor,npc)
	if curr_guid.target_level == level.name() and (type(npc.position) == STR_FUNCTION and npc:position() or npc.position):distance_to_sqr(vector():set(curr_guid.pos[1], curr_guid.pos[2], curr_guid.pos[3])) <= 25*25 then
		return true
	end
end

function get_phrase_1()
	local str = string.format(game.translate_string('st_jg_16'), guid['timer'], guid.description, guid['zarplata'], guid['neustoika'])
	if jg_guider.debug == true then
		str = string.format('%s\\n\\n%s %s', str, game.translate_string('st_jg_19'), guid['size'])
	end
	return str
end

function get_phrase2()
	local str = string.format('%s %s', game.translate_string('st_jg_17'), curr_guid.description)
	if jg_guider.debug == true then
		str = string.format('%s\\n\\n%s %s', str, game.translate_string('st_jg_19'), curr_guid['size'])
	end
	return str
end

function get_phrase3()
	return string.format(game.translate_string('st_jg_18'), curr_guid['neustoika'])
end

function get_phrase4()
	local left_hours, left_minutes = get_time_left()
	local phrase = strformat(strtransl('st_jg_21'), left_hours, left_minutes)
	return phrase
end

function get_phrase5()
	local phrase
	if (has_time_bonus()) then
		phrase = strformat("%s %s", strtransl("st_jg_9"), strtransl("st_jg_22"))
	else
		phrase = strtransl("st_jg_9")
	end
	return phrase
end

--///////////////////////////////// Вспомогательные функции

function send_tip(npc, news_text, news_sound)
	local news_caption = strformat("%s, %s", npc:character_name(), game.translate_string(npc:character_community()))
	local news_icon = npc:character_icon()
	db.actor:give_game_news(news_caption, news_text, news_icon, 0, 15000)
	news_sound:play(db.actor,0,sound_object.s2d)
end

function has_guiding_started()
    return db.actor:has_info('guider_start')
end

function try_clear_prepared_follower(npc)
    local squad = get_object_squad(npc)
	if (squad and squad.id == guid['squad_id']) then
		clear_guid()
	end
end

function is_squad_need_guider(squad_id)
	return guid.squad_id == squad_id
end

function has_time_bonus()
	local result = false
	if (curr_guid and curr_guid.timer and curr_guid.bonus_time_cf) then
		local minutes_left = jg_timers.get_g_timer_left_time('guid_fail')
		local minutes_total = curr_guid.timer * 60
		result = minutes_left > math.floor(minutes_total * curr_guid.bonus_time_cf)
	end
	return result
end

function get_time_left()
	local minutes_total = jg_timers.get_g_timer_left_time('guid_fail')
	local hours = math.floor(minutes_total / 60)
	local minutes = minutes_total - (hours * 60)
	return hours, minutes
end
