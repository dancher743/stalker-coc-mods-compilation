--
-- Critical hit from Actor
-- Added by Dancher
--

local hit_chance_by_rank = 
{
	["novice"] 			= 0.06,
	["trainee"] 		= 0.08,
	["experienced"]		= 0.10,
	["professional"]    = 0.12,
	["veteran"]         = 0.14,
	["expert"]          = 0.16,
	["master"]          = 0.18,
	["legend"]          = 0.20,
}
local hit_damage = 3.0

local function get_hit_chance()
	local actor_rank = ranks.get_obj_rank_name(db.actor)
	return hit_chance_by_rank[actor_rank]
end

local function calculate_hit_power(amount)
	local hit_chance = get_hit_chance()
	local a = amount * (1 - hit_chance)
	local b = amount * hit_damage * hit_chance
	return (a + b) - amount
end

local function can_hit(who, obj, amount)
	return IsActor(who) and obj:alive() and obj.health*100 - amount > 0 and math.random() <= get_hit_chance()
end

local function obj_on_hit_callback(obj, amount, local_direction, who, bone_index)	
	if (not can_hit(who, obj, amount)) then
		return
	end

	local crit_hit = hit()
	crit_hit.type = hit.fire_wound
	crit_hit.bone = bone_index
	crit_hit.power = calculate_hit_power(amount)
	crit_hit.impulse = 0.0
	crit_hit.direction = local_direction
	crit_hit.draftsman = who
	
	obj:hit(crit_hit)
	-- printf(string.format("DANCHER | Critical hit on %s. Orignal damage is %s.", math.floor(crit_hit.power), math.floor(amount)))
	
	ui_actor_critical_hit.show_mark()
end

function on_game_start()
	RegisterScriptCallback("npc_on_hit_callback", obj_on_hit_callback)
	RegisterScriptCallback("monster_on_hit_callback", obj_on_hit_callback)
end
