--
-- HUD code for Guider job
-- Author: Dancher
--

local hud_timer
local last_minute

local function actor_on_slicing_update()
	local current_minute = level.get_time_minutes()
	
	if (last_minute and last_minute == current_minute) then
		return
	end
	last_minute = current_minute
	
	local left_hours, left_minutes = jg_guider.get_time_left()
	hud_timer:SetValue2(left_hours, left_minutes)
end

local function actor_on_first_update()
	try_start()
end

local function actor_on_net_destroy()
	try_stop()
end

function on_game_start()
	RegisterScriptCallback("actor_on_first_update",actor_on_first_update)
	RegisterScriptCallback("actor_on_net_destroy",actor_on_net_destroy)
end

function try_start()
	if (hud_timer or not jg_guider.has_guiding_started() or not axr_main_options.get_check_option("show_guide_job_hud_timer")) then
		return
	end
	
	hud_timer = ui_hud_timer.create()
	local time_format = strtransl("ui_st_jg_hud_timer_format")
	hud_timer:SetTimeFormat(time_format)
	local position_base = hud_timer:GetPosition()
	local position_without_bar = vector2():set(position_base.x, position_base.y)
	local position_with_bar = vector2():set(position_base.x, position_base.y + 45)
	RegisterScriptCallback("actor_on_slicing_update",actor_on_slicing_update)
	
	local function tickback()
		if (main_hud_shown()) then
			local position = ui_enemy_health.has_progress_bar_shown() and position_with_bar or position_without_bar
			hud_timer:SetPosition(position)
			hud_timer:Show(true)
		else
			hud_timer:Show(false)
		end
	end
	StartTimer("jg_hud_show_timer", 1000, tickback)
end

function try_stop()
	if (not hud_timer) then
		return
	end
	
	StopTimer("jg_hud_show_timer")
	
	UnregisterScriptCallback("actor_on_slicing_update",actor_on_slicing_update)
	last_minute = nil
	
	hud_timer:Clear()
	hud_timer = nil
end
