--
-- Real time manager
-- Added by Dancher
--

local time_since_start = 0 -- in milliseconds

local is_debug_enabled = false

local function print_debug_string()
	local ms = get_elapsed_time_ms()
	local s = get_elapsed_time_s()
	local m = get_elapsed_time_m()
	local h = get_elapsed_time_h()
	local d = get_elapsed_time_d()
	local debug_string = strformat(">>> Dancher: realtime_manager - ms: %s, s: %s, m: %s, h: %s, d: %s.", ms, s, m, h, d)
	printf(debug_string)
end

local function save_state(m_data)
	local state = m_data.realtime_manager_state
	if (state == nil) then
		state = {}
	end
	state.time_since_start = time_since_start
	m_data.realtime_manager_state = state
end

local function load_state(m_data)
	local state = m_data.realtime_manager_state
	time_since_start = state and state.time_since_start or 0
end

local function actor_on_update(_,delta)
	time_since_start = time_since_start + delta
	if (is_debug_enabled) then
		print_debug_string()
	end
end

function on_game_start()
	RegisterScriptCallback("save_state",save_state)
	RegisterScriptCallback("load_state",load_state)
	RegisterScriptCallback("actor_on_update",actor_on_update)
end

--
-- Helpers
--

function get_elapsed_time_ms()
	return time_since_start
end

function get_elapsed_time_s()
	return get_elapsed_time_ms() / 1000
end

function get_elapsed_time_m()
	return get_elapsed_time_s() / 60
end

function get_elapsed_time_h()
	return get_elapsed_time_m() / 60
end

function get_elapsed_time_d()
	return get_elapsed_time_h() / 24
end
