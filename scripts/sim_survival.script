--
--	Function-helpers for a simulation of EOC's survival mode
--	Added by Dancher
--

local delay_hours = 24
local zombied_squads_count = 3
local max_zombied_chance = 0.5
local max_mutant_chance = 0.9

local enable_debug = false

-- From Anomaly 1.5.1.2 mod
local function print_dbg(fmt, ...)
	if enable_debug then
		printf("DANCHER | sim_survival.script : " .. fmt, ...)
	end
end

local function get_chance_by_elapsed_hours(replace_chance)
	local hours_elapses = utils.get_hours_elapsed()
	local chance_factor = utils.inverse_lerp(0, delay_hours, hours_elapses)
	local chance = utils.lerp(0 , replace_chance, chance_factor)
	if enable_debug then print_dbg("get_chance_by_elapsed_hours! Factor: %s, chance: %s", chance_factor, chance) end
	return chance
end

function get_zombied_respawn_squads_count()
	return zombied_squads_count
end

function can_replace_faction_respawn(faction)
	local chance = math.random()
	return chance < get_chance_by_elapsed_hours(max_zombied_chance)
end

function try_replace_mutant(section)
	local result_section = section
	local survival_mutants = sim_tables.mutants_for_survival_mode
	local is_already_survival_mutant = utils.contains(survival_mutants, section)
	
	if (is_already_survival_mutant == false) then
		local chance = math.random()
		
		if (chance < get_chance_by_elapsed_hours(max_mutant_chance)) then
			result_section = survival_mutants[math.random(#survival_mutants)]
			if (result_section == "simulation_zombie" and math.random() < 0.1) then
				result_section = "simulation_zombie_ghost"
			end
			if enable_debug then print_dbg("MUTANT: %s -> %s", section, result_section) end
		end
	end

	return result_section
end

function contains_faction_prop(prop_name, prop_count)
	return sim_tables.factions_to_zombied_props[prop_name] and prop_count > 0
end

function are_factions_zombied_and_monster(f1, f2)
	return (f1 == "zombied" and f2 == "monster") or (f1 == "monster" and f2 == "zombied")
end
